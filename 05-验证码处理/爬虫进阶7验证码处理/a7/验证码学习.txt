一、什么是验证码？
验证码（CAPTCHA）是“Completely Automated Public Turing test to tell Computers and Humans Apart”
（全自动区分计算机和人类的图灵测试）的缩写，
是一种区分用户是计算机还是人的公共全自动程序。可以防止：恶意破解密码、刷票、论坛灌水，
有效防止某个黑客对某一个特定注册用户用特定程序暴力破解方式进行不断的登陆尝试。
这个问题可以由计算机生成并评判，但是必须只有人类才能解答。由于计算机无法解答CAPTCHA的问题，
所以回答出问题的用户就可以被认为是人类。

二、验证码类别
一个合格的验证码，是能够隔离大部分的机器人，而不让普通用户感觉到厌烦，客户体验很好。
1、传统输入式验证码:
由多个 数字、符号、字母、汉字 组成，加一些干扰项，如点状、线状干扰图案，扭曲本身内容
还有那种动态的晃来晃去的。
特点：部署简单，技术也最简单
缺点：防护性不高
突破技术：
    1、本机自动识别图片，识别率不是很高，代表性的，
        如：sunday.dll（针对不同的网站进行调优，识别率达到50%-60%）
            pytesseract-oct：机器学习的进行识别
    2、可以架设服务器做机器学习的方式进行训练，识别验证码
        如：各大主流的验证码打码平台，都有这样的实现
    3、通过打码平台进行打码，发送图片到打码平台，平台返回图片内容。现在最主流的
    4、通过第三方免费的图片识别技术进行验证码识别，如百度识图，google识图。

2、简单问题型验证码：
如回答本网站域名，简单的1+3=？ 等这样的问题
特点：部署比较简单，技术也简单
缺点：防护性一般，但是用户体验稍差
突破技术：
    1、纯计算的题，或者那种简单选择出现的字符的题，是可以通过图片识别进行验证通过的
    2、部分网站，是可以把所有题目穷尽，全部下载到本地，把图片做相应处理，
        然后和需要验证的时候的验证码进行匹配，进行识别
    3、打码平台

3、纯行为验证码：
采用极验的：https://account.geetest.com/register，虎嗅
拖动图片或点击元素后，拖动图片，如：极验验证码
    无法使用打码平台，因为这个行为验证的原理，就是本地js捕捉你的鼠标事件
    如开始移动事件，单位时间移动距离，上下相对位置的偏移，鼠标的运动轨迹，
    前后鼠标移动速度的对比，最终鼠标停止移动的坐标等。。。。
特点：部署麻烦，防护性强
缺点：需要好体验的话需要费用
突破技术：
    1、浏览器模拟(难度较大)，譬如：selenium+phantomjs，
        要模拟正常用户的拖动，不能瞬移，不能完全直线，速度不能匀速，得上下轻微移动
    2、js破解(难度很大)：还原这个完整图片，查找这个缺口坐标，破解js函数，获取必要的计算参数，
        去进行模拟js的计算，得出一系列的值，模拟提交

4. 图标选择
给出一组图片，按要求点击其中一张或者多张，如：12306、新浪注册（九宫格）
特点：部署稍难，防护性一般
缺点：客户体验一般
突破技术：
    1、图片识别
    2、打码平台，一般需要订制打码服务

5、点击式的图文验证与行为辅助
通过文字提醒用户点击图中相同字的位置进行验证。
特点：部署稍难
缺点：客户体验差
突破技术：
    1、图片识别后，点击目标坐标
    2、打码平台，订制服务

6、手机获取验证码
通过输入指定手机号码，获取验证码，进行验证。
解决方案：手机打码平台

7、手机发送短信
通过手机发送特定短信到特定号码，进行验证。
解决方案：手机打码平台

三、处理方式
1、使用百度识图、google识图等第三方API识别图片
曾经 12306可以使用百度识图进行识别
曾经 http://cn.docs88.com/也可以识别简单的图片

2、通过人工智能识别图片
大部分打码平台都是AI+打码员人工打码结合

3、pytesseract识别图片
chi_sim 是中文字符集
eng 是英文字符集
    1.1 安装PILLOW，在pycharm或者pip安装
    1.2 安装pytesseract，在pycharm或者pip安装
    1.3 tesseract安装指南：https://jingyan.baidu.com/article/219f4bf788addfde442d38fe.html
    1.4 https://github.com/tesseract-ocr/tessdata 下载训练内容
        https://github.com/tesseract-ocr/langdata  下载语言数据
    1.5 文档：https://github.com/tesseract-ocr/tesseract/wiki/ImproveQuality
              https://github.com/tesseract-ocr/tesseract/blob/master/doc/tesseract.1.asc
    1.6 需要VC2015

4、通过打码平台识别验证码
    4.1  图片打码平台识别图片
    4.2  手机打码平台完成手机验证码

